- name: Setup stateful services
  hosts: _manual
  become: true
  vars:
    vault_secrets: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/prod/bff_timescaledb url=http://10.3.1.5:8200') }}"
  tasks:
    - name: Create a bff dir if it does not exist
      ansible.builtin.file:
        path: /bff
        state: directory
        mode: '0755'

    - name: Copy file from host to machine
      copy:
        src: "{{ playbook_dir }}/docker-compose.yml"
        dest: /bff/docker-compose.yml


    - name: Generate .env file from vault lookup
      copy:
        dest: /bff/.env
        content: |
          {% for key, value in vault_secrets.items() %}
          {{ key }}={{ value }}
          {% endfor %}          

    - name: Create and start services
      community.docker.docker_compose:
        project_src: /bff/
        env_file: /bff/.env
      register: output

    - debug:
        var: output

- name: Pull latest image for bff
  hosts: _worker:_manager:_worker_gpu
  become: true
  vars:
    image_name: ghcr.io/agri-mitra/bff
    image_tag: main
  tasks:
    - name: Login to Github Packages Registry
      community.docker.docker_login:
        registry_url: ghcr.io/
        username: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/prod/common:GITHUB_USERNAME') }}"
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/prod/common:GITHUB_TOKEN') }}"

    - name: pull an image
      docker_image:
        name: "{{ image_name }}:{{ image_tag }}"
        source: "pull"
        force_source: yes
      register: output
      

    - debug:
        var: output
    
- name: Create Docker service on Swarm cluster
  hosts: _manager
  become: true
  vars:
    service_name: bff
    image_name: ghcr.io/agri-mitra/bff
    image_tag: main
    replicas: 1
    container_port: 3000
    published_port: 8081
  tasks:
    - name: Verify if service exists
      docker_swarm_info:
        services_filters:
          name: "{{ service_name }}"
        services: yes
      register: swarm_service

    - name: Create Docker service
      docker_swarm_service:
        name: "{{ service_name }}"
        image: "{{ image_name }}:{{ image_tag }}"
        replicas: "{{ replicas }}"
        logging:
          driver: syslog
          options:
            syslog-address: "udp://10.3.1.6:12201"
            tag: bff
        placement:
          constraints:
            # - node.labels.node_vm_type == non_gpu
            - node.role == worker
        force_update: yes
        env:
          "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/prod/bff') }}"
        publish:
          - published_port: "{{ published_port }}"
            target_port: "{{ container_port }}"
            protocol: tcp
            mode: ingress
        state: present

